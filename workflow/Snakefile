import os
import yaml
quarto_yml = '_quarto.yml'
with open(quarto_yml, 'r') as infile:
    quarto_meta = yaml.full_load(infile)

pdf_output = f"{quarto_meta['project']['output-dir']}/{quarto_meta['book']['output-file']}.pdf"

front_matter_files = list()
for key in ['preface', 'dedication', 'acknowledgements', 'abstract', 'acronyms', 'frontispiece', 'bibliography']:
    if key in quarto_meta.keys():
        val = quarto_meta[key]
        if val.startswith('\\input{'):
            filename = val.strip('\\input{').rstrip('}')
            front_matter_files.append(filename) # input tex file
        if key in ('frontispiece', 'bibliography'):
            front_matter_files.append(val) # image file

rule targets:
    input:
        pdf_output, 'README.md'

rule update_extension:
    output:
        dir=directory("_extensions/kelly-sovacool/rackham/")
    conda: "envs/env.yml"
    shell:
        """
        quarto update extension kelly-sovacool/rackham
        """

rule update_submods:
    output:
        dir=directory("papers/")
    shell:
        """
        git submodule update --remote
        """

rule render_pdf:
    input:
        yml = quarto_yml,
        qmd = quarto_meta['book']['chapters'],
        tex = 'header.tex',
        frontmatter = front_matter_files,
        ext = [f"{rules.update_extension.output.dir}/{file}" for file in os.listdir(rules.update_extension.output.dir)],
    output:
        pdf = pdf_output,
        tex = f"{quarto_meta['book']['output-file']}.tex"
    conda: "envs/env.yml"
    shell:
        """
        quarto render --to rackham-pdf
        """

rule render_readme:
    input:
        qmd='README.qmd',
        deps='front-matter/abstract.tex'
    output: md='README.md'
    conda: "envs/env.yml"
    shell:
        """
        quarto render {input.qmd}
        """
